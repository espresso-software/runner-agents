# This is a basic workflow to help you get started with Actions

name: Ubi Agent Build and Deploy

# Controls when the workflow will run
on:
  push:
    branches-ignore:
      - main
    paths:
      - ubi-agent/**
      - .github/workflows/ubi-agent.yml
      - .github/actions/ubi-agent-build/**
      # Uncomment below for deployment feature development
      - roles/uat-deploy/**
  pull_request:
    branches:
      - main
    paths:
      - ubi-agent/**
      - ubi-agent.yml
      - .github/workflows/ubi-agent.yml
      - .github/actions/ubi-agent-build/**
      - roles/uat-deploy/**
  schedule:
    - cron: '0 12 * * 5'

env:
  DOCKER_REPOSITORY: coffee206/github-actions
  GITHUB_ACTIONS_VERSION: '2.321.0'
  BUILD_DIR: ubi-agent

jobs:
  versioning:
    runs-on:
      - self-hosted
      - docker
    outputs:
      x64_tag: x64-${{ steps.get_version.outputs.version }}
      arm64_tag: arm64-${{ steps.get_version.outputs.version }}
      common_tag: ${{ steps.get_version.outputs.version }}
    
    steps:
      - uses: actions/checkout@v2
      - uses: espresso-software/actions/common/versioning@feature/docker-actions
        id: get_version
  
  arm64-build:
    needs:
      - versioning
    runs-on:
      - self-hosted
      - docker
      - ARM64
    env:
      TARGETARCH: linux-arm64
  
    steps:
      - uses: actions/checkout@v2

      - name: Build and publish image
        uses: ./.github/actions/ubi-agent-build
        env:
          DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PAT }}
        with:
          actions_version: ${{ env.GITHUB_ACTIONS_VERSION }}
          targetarch: ${{ env.TARGETARCH }}
          build_directory: ${{ env.BUILD_DIR }}
          tag: ${{ needs.versioning.outputs.arm64_tag }}.SNAPSHOT
  
  x64-build:
    # comment this line to debug the entire pipeline
    # if: github.event.pull_request || github.event_name == 'schedule'
    # TODO: add second x64 worker and run both builds for all feature lanes
    needs:
      - versioning
    runs-on:
      - self-hosted
      - docker
      - x64
    
    env:
      TARGETARCH: linux-x64
  
    steps:
      - uses: actions/checkout@v2
      
      - name: Build and publish image
        uses: ./.github/actions/ubi-agent-build
        env:
          DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PAT }}
        with:
          actions_version: ${{ env.GITHUB_ACTIONS_VERSION }}
          targetarch: ${{ env.TARGETARCH }}
          build_directory: ${{ env.BUILD_DIR }}
          tag: ${{ needs.versioning.outputs.x64_tag }}.SNAPSHOT

  deploy:
    needs: 
      - versioning
      - arm64-build
      - x64-build
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@feature/docker-actions
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: ubi-agent.yml
          inventory_path: inventory/hosts.ini
          vars: tag=${{ needs.versioning.outputs.arm64_tag }}.SNAPSHOT
  
  promote:
    needs: 
      - versioning
      - deploy
    runs-on:
      - self-hosted
      - docker
    env:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PAT }}
    steps:
      - name: Promote x64 image
        uses: espresso-software/actions/docker/promote@feature/docker-actions
        with:
          repository: ${{ env.DOCKER_REPOSITORY }}
          old_tag: ${{ needs.versioning.outputs.x64_tag }}.SNAPSHOT
          promote_tag: ${{ needs.versioning.outputs.x64_tag }}
          promote_latest: 'true'
          promote_custom_latest: x64-latest
      
      - name: Promote arm64 image
        uses: espresso-software/actions/docker/promote@feature/docker-actions
        with:
          repository: ${{ env.DOCKER_REPOSITORY }}
          old_tag: ${{ needs.versioning.outputs.arm64_tag }}.SNAPSHOT
          promote_tag: ${{ needs.versioning.outputs.arm64_tag }}
          promote_latest: 'true'
          promote_custom_latest: arm64-latest
      
      - name: Create latest manifest
        uses: espresso-software/actions/docker/common-tag@feature/docker-actions
        with:
          repository: ${{ env.DOCKER_REPOSITORY }}
          tag: latest
          x64_tag: x64-latest
          arm64_tag: arm64-latest
      
      - name: Create release manifest
        uses: espresso-software/actions/docker/common-tag@feature/docker-actions
        with:
          repository: ${{ env.DOCKER_REPOSITORY }}
          tag: ${{ needs.versioning.outputs.common_tag }}
          x64_tag: ${{ needs.versioning.outputs.x64_tag }}
          arm64_tag: ${{ needs.versioning.outputs.arm64_tag }}
      
  #TODO: cleanup
        

        
        